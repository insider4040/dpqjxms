#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <windows.h>

#define SPACEBAR 32
#define ARROW 224
#define NOR_SPEED 50//투수가 공 던질 때 일반 속도
#define MAX_SPEED 30//공 빨리 던져질 때 속도
#define HIT_SPEED 100 //공 치고 나가는 속도
#define BUNT_SPEED 70 //번트 쳤을 때 공 스피드
#define FOUL_OUT_SPEED 50//파울이나 아웃될 때 공 스피드

//커서 없애줌
void hide_cursor(int n) // 커서 깜빡임 삭제
{
	HANDLE hConsole;
	CONSOLE_CURSOR_INFO ConsoleCursor;

	hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
	ConsoleCursor.bVisible = n;
	ConsoleCursor.dwSize = 1;

	SetConsoleCursorInfo(hConsole, &ConsoleCursor);
}

//좌표변경시켜줌
void gotoxy(int x, int y)
{
	COORD pos = { x,y };

	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);

}

//베이스랑 마운드 출력
void map()
{
	int j = 6;

	//경기장 선
	gotoxy(85, 5);
	printf("-");
	for (int i = 82; i > 36; i -= 3)
	{
		gotoxy(i, j);
		printf("-");
		j++;
	}
	j = 6;
	for (int i = 88; i < 134; i += 3)
	{
		gotoxy(i, j);
		printf("-");
		j++;
	}

	//중견수
	gotoxy(85, 13);
	printf("@\n");

	//좌익수
	gotoxy(55, 20);
	printf("@");

	//우익수
	gotoxy(115, 20);
	printf("@");

	//2루
	gotoxy(85, 20);
	printf("@\n");

	//3루
	gotoxy(55, 30);
	printf("@\n");

	//1루
	gotoxy(115, 30);
	printf("@\n");

	//마운드
	gotoxy(85, 30);
	printf("=\n");

	//홈
	gotoxy(85, 40);
	printf("@\n");
}

//직구 프린트하기
void print_ball()
{
	for (int i = 31; i < 41; ++i)
	{
		gotoxy(84, i);
		printf("*");
		Sleep(MAX_SPEED);
		//이전 공 지우기
		gotoxy(84, i);
		printf(" ");
	}
}

//변화구 프린트하기
void print_ball2()
{
	srand((unsigned)time(NULL));
	int ran = 0;
	ran = (rand() % 100 < 50) ? 0 : 1;

	int j = 84;

	if (ran == 0)
	{
		for (int i = 31; i < 36; ++i)
		{
			gotoxy(j, i);
			printf("*");
			Sleep(NOR_SPEED);
			//이전 공 지우기
			gotoxy(j, i);
			printf(" ");
			++j;
		}

		for (int i = 36; i < 41; ++i)
		{
			--j;

			gotoxy(j, i);
			printf("*");
			Sleep(MAX_SPEED);
			//이전 공 지우기
			gotoxy(j, i);
			printf(" ");
		}
	}
	else
	{
		for (int i = 31; i < 36; ++i)
		{
			gotoxy(j, i);
			printf("*");
			Sleep(NOR_SPEED);
			//이전공 지우기
			gotoxy(j, i);
			printf(" ");
			--j;
		}

		for (int i = 36; i < 41; ++i)
		{
			++j;

			gotoxy(j, i);
			printf("*");
			Sleep(MAX_SPEED);	
			//이전 공 지우기
			gotoxy(j, i);
			printf(" ");
		}
	}
}

//타격방법 선택
int print_hitting()
{
	int hit = 0;

	gotoxy(77, 0);
	printf("1.타격\t 2.번트\t");
	scanf_s(" %d", &hit);

	return hit;
}

//안타()
void hit_single()
{
	srand((unsigned)time(NULL));

	system("cls");
	map();

	//치고 나서 정해진 위치 랜덤하게 정하기
	int ran = 0;

	//홈런 또는 안타
	int homerun_single = 0;
	homerun_single = (rand() % 100 < 10) ? 0 : 1;

	//시작 지점
	int x = 84;
	int y = 40;

	//수비가 가야하는 x, y위치 저장.
	int def_x = 0;
	int def_y = 0;

	//홈런
	if (homerun_single == 0)
	{
		ran = rand() % 7;

		switch (ran)
		{
		case 0:
		{//37, 18

			while (y >= 18) {
				if (y < 33)
				{
					gotoxy(80, 0);
					printf("쭉쭉 넘어가는 타구");
				}
				gotoxy(x, y);
				printf("*");
				Sleep(HIT_SPEED);
				gotoxy(x, y);
				printf(" ");
				x -= 2;
				y--;
				map();
			}
			gotoxy(80, 0);
			printf("                                      ");
			gotoxy(80, 0);
			printf("넘어갑니다!!");
			gotoxy(x, y);
			printf("*");

			break;
		}
		case 1:
		{//46,12

			while (y >= 12)
			{
				if (y < 30)
				{
					gotoxy(80, 0);
					printf("쭉쭉 가는 타구");
				}
				gotoxy(x, y);
				printf("*");
				Sleep(HIT_SPEED);
				gotoxy(x, y);
				printf(" ");
				if (y % 2 == 0)
				{
					x -= 1;
				}
				else
				{
					x -= 2;
				}
				y--;
				map();
			}
			gotoxy(80, 0);
			printf("                                      ");
			gotoxy(80, 0);
			printf("수비가 잡을 수 없는곳으로 넘어갑니다!!");
			gotoxy(x, y);
			printf("*");

			break;
		}
		case 2:
		{//61, 8
			while (y >= 8)
			{
				if (y < 29)
				{
					gotoxy(80, 0);
					printf("담장 뒤로 담장 뒤로");
				}
				gotoxy(x, y);
				printf("*");
				Sleep(HIT_SPEED);
				gotoxy(x, y);
				printf(" ");
				if (y % 2 == 0)
				{
					x -= 1;
				}
				else
				{
					x -= 0;
				}
				y--;
				map();
			}
			gotoxy(80, 0);
			printf("                                      ");
			gotoxy(80, 0);
			printf("넘어갑니다!!");
			gotoxy(x, y);
			printf("*");

			break;
		}
		case 3: 
		{//85, 2
			x += 1;
			while (y >= 2)
			{
				if (y < 28)
				{
					gotoxy(80, 0);
					printf("중견수를 넘어가는 타구");
				}
				gotoxy(x, y);
				printf("*");
				Sleep(HIT_SPEED);
				gotoxy(x, y);
				printf(" ");

				y--;
				map();
			}
			gotoxy(80, 0);
			printf("                                      ");
			gotoxy(80, 0);
			printf("완벽한 아치를 그려냅니다!!");
			gotoxy(85, 2);
			printf("*");

			break;
		}
		case 4: 
		{
			//109, 8
			while (y >= 8)
			{
				if (y < 29)
				{
					gotoxy(80, 0);
					printf("간다간다간다간다");
				}
				gotoxy(x, y);
				printf("*");
				Sleep(HIT_SPEED);
				gotoxy(x, y);
				printf(" ");
				if (y % 2 == 0)
				{
					x += 1;
				}
				else
				{
					x += 0;
				}
				y--;

				map();
			}
			gotoxy(80, 0);
			printf("                                      ");
			gotoxy(80, 0);
			printf("호옴런!!");
			gotoxy(x, y);
			printf("*");

			break;
		}
		case 5:
		{//124, 12
			while (y >= 12)
			{
				if (y < 30)
				{
					gotoxy(80, 0);
					printf("오른쪼오오오오옥");
				}
				gotoxy(x, y);
				printf("*");
				Sleep(HIT_SPEED);
				gotoxy(x, y);
				printf(" ");
				if (y % 2 == 0)
				{
					x += 1;
				}
				else
				{
					x += 2;
				}
				y--;
				map();
			}
			gotoxy(80, 0);
			printf("                                      ");
			gotoxy(80, 0);
			printf("돌아올 수 없는 곳으로 넘어갑니다!!");
			gotoxy(x, y);
			printf("*");
		    
			break;
		}
		case 6:
		{
			// 133, 18
			while (y >= 18)
			{
				if (y < 32)
				{
					gotoxy(80, 0);
					printf("이 타구 이 타구");
				}
				gotoxy(x, y);
				printf("*");
				Sleep(HIT_SPEED);
				gotoxy(x, y);
				printf(" ");

				x += 2;
				y--;
				map();
			}
			gotoxy(80, 0);
			printf("                                      ");
			gotoxy(80, 0);
			printf("아무도 잡을 수 없습니다!!");
			gotoxy(x, y);
			printf("*");

			break;
		}
		}

	}
	//파울 또는 안타
	else if (homerun_single == 1)
	{
		homerun_single = (rand() % 100 < 25) ? 0 : 1;
		//파울
		if (homerun_single == 0)//파울
		{
			ran = (rand() % 100 < 50) ? 0 : 1;

			if (ran == 0)//왼쪽 파울
			{
				while (y >= 29)
				{
					if (y < 35)
					{
						gotoxy(80, 0);
						printf("좌측으로 가는 타구");
					}
					gotoxy(x, y);
					printf("*");
					Sleep(FOUL_OUT_SPEED);
					gotoxy(x, y);
					printf(" ");
					x -= 5;
					y--;
					map();
				}
				gotoxy(80, 0);
				printf("                   ");
				gotoxy(80, 0);
				printf("파울입니다.");
				gotoxy(x, y);
				printf("*");
			}
			else//오른쪽 파울
			{
				//140, 25
				while (y >= 29)
				{
					if (y < 35)
					{
						gotoxy(80, 0);
						printf("우측으로 가는 타구");
					}
					gotoxy(x, y);
					printf("*");
					Sleep(FOUL_OUT_SPEED);
					gotoxy(x, y);
					printf(" ");
					x += 5;
					y--;
					map();
				}
				gotoxy(80, 0);
				printf("                   ");
				gotoxy(80, 0);
				printf("파울입니다.");
				gotoxy(x, y);
				printf("*");
			}
		}
		//안타 또는 뜬공
		else
		{
			homerun_single = (rand() % 100 < 30) ? 2 : 1;
			//1루타 또는 뜬공 아웃
			if (homerun_single == 1)
			{
				homerun_single = (rand() % 100 < 70) ? 0 : 1;
				//뜬공
				if (homerun_single == 0)
				{
					ran = rand() % 3;
					switch (ran)
					{
					case 0://좌익수 뜬공
					{//56, 21 -> 좌

						while (y >= 21)
						{
							if (y < 32)
							{
								gotoxy(80, 0);
								printf("좌익수 높이 뜬공");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(FOUL_OUT_SPEED);
							gotoxy(x, y);
							printf(" ");
							if (y % 2 == 0)
							{
								x -= 1;
							}
							else
							{
								x -= 2;
							}
							--y;
						}
						gotoxy(80, 0);
						printf("                              ");
						gotoxy(80, 0);
						printf("아웃입니다.");
						gotoxy(x, y);
						printf("*");
						break;
					}
					case 1://중견수 뜬공
					{//86, 13 -> 중앙
						while (y >= 14)
						{
							if (y < 32)
							{
								gotoxy(80, 0);
								printf("중견수 높이 뜬공");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(FOUL_OUT_SPEED);
							gotoxy(x, y);
							printf(" ");
							y--;
						}
						gotoxy(80, 0);
						printf("                         ");
						gotoxy(80, 0);
						printf("아웃입니다.");
					
						gotoxy(x, y);
						printf("*");
						break;
					}
					case 2://우익수 뜬공
					{//116, 20 -> 우
						while (y >= 21)
						{
							if (y < 32)
							{
								gotoxy(80, 0);
								printf("우익수 높이 뜬공");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(FOUL_OUT_SPEED);
							gotoxy(x, y);
							printf(" ");
							if (y % 2 == 0)
							{
								x += 1;
							}
							else
							{
								x += 2;
							}
							y--;
						}
						gotoxy(80, 0);
						printf("                         ");
						gotoxy(80, 0);
						printf("아웃입니다.");
						gotoxy(x, y);
						printf("*");
						break;
					}
					}
				}
				//1루타
				else
				{
					ran = rand() % 3;
					switch (ran)
					{
					case 0://좌익수 앞
					{//64, 22
						while (y >= 21)
						{
							if (y < 32)
							{
								gotoxy(80, 0);
								printf("좌익수 앞에 떨어지는 타구");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(HIT_SPEED);
							gotoxy(x, y);
							printf(" ");
							x -= 1;
							y--;
						}
						gotoxy(80, 0);
						printf("                                 ");
						gotoxy(80, 0);
						printf("안타입니다.");
						gotoxy(x, y);
						printf("*");
						break;
					}
					case 1://중견수 앞
					{//85, 16
						while (y >= 16)
						{
							if (y < 32)
							{
								gotoxy(80, 0);
								printf("중견수 앞에 떨어지는 타구");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(HIT_SPEED);
							gotoxy(x, y);
							printf(" ");
							y--;
						}
						gotoxy(80, 0);
						printf("                                  ");
						gotoxy(80, 0);
						printf("안타입니다.");
						gotoxy(x, y);
						printf("*");
						break;
					}
					case 2://우익수 앞
					{//106, 22
						while (y >= 21)
						{
							if (y < 32)
							{
								gotoxy(80, 0);
								printf("우익수 앞에 떨어지는 타구");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(HIT_SPEED);
							gotoxy(x, y);
							printf(" ");
							x += 1;
							y--;
						}
						gotoxy(80, 0);
						printf("                                           ");
						gotoxy(80, 0);
						printf("안타입니다.");
						gotoxy(x, y);
						printf("*");
						break;
					}
					}
				}
			}
			//2루타 또는 3루타
			else
			{
				homerun_single = (rand() % 100 < 20) ? 3 : 2;
				//3루타
				if (homerun_single == 3)
				{
					//130, 21
					while (y >= 23)
					{
						if (y < 33)
						{
							gotoxy(80, 0);
							printf("경기장 우측 깊숙한 타구");
						}
						gotoxy(x, y);
						printf("*");
						Sleep(HIT_SPEED);
						gotoxy(x, y);
						printf(" ");
						if (y % 2 == 0)
						{
							x += 4;
						}
						else
						{
							x += 1;
						}
						y--;
					}
					def_x = (x + 1);
					def_y = y;
					gotoxy(80, 0);
					printf("                                        ");
					gotoxy(80, 0);
					printf("3루타가 나옵니다!");
					gotoxy(x + 1, y);
					printf("*");
				}
				//2루타
				else
				{
					ran = rand() % 7;

					switch (ran)
					{
					case 0:
					{//43, 21
						while (y >= 21)
						{
							if (y < 31)
							{
								gotoxy(80, 0);
								printf("좌측으로 깊숙한 타구");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(HIT_SPEED);
							gotoxy(x, y);
							printf(" ");
							x -= 2;
							y--;
						}
						gotoxy(80, 0);
						printf("                                ");
						gotoxy(80, 0);
						printf("2루타가 나옵니다!");
						gotoxy(x, y);
						printf("*");
						break;
					}
					case 1:
					{//61, 15
						while (y >= 15)
						{
							if (y < 30)
							{
								gotoxy(80, 0);
								printf("좌중간을 가르는 타구");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(HIT_SPEED);
							gotoxy(x, y);
							printf(" ");
							x -= 1;
							y--;
						}
						gotoxy(80, 0);
						printf("                                      ");
						gotoxy(80, 0);
						printf("2루타가 나옵니다!");
						gotoxy(x, y + 1);
						printf("*");
						break;
					}
					case 2:
					{//73, 12
						while (y >= 12)
						{
							if (y < 30)
							{
								gotoxy(80, 0);
								printf("좌중간을 가르는 타구");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(HIT_SPEED);
							gotoxy(x, y);
							printf(" ");
							if (y % 2 == 0)
							{
								x -= 1;
							}
							else
							{
								x -= 0;
							}
							y--;
						}
						gotoxy(80, 0);
						printf("                                      ");
						gotoxy(80, 0);
						printf("2루타가 나옵니다!");
						gotoxy(x, y);
						printf("*");
						break;
					}
					case 3:
					{//85, 5
						while (y >= 7)
						{
							if (y < 30)
							{
								gotoxy(80, 0);
								printf("중견수 키를 넘어가는 타구");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(HIT_SPEED);
							gotoxy(x, y);
							printf(" ");
							y--;
							map();
						}
						gotoxy(80, 0);
						printf("                                      "); 
						gotoxy(80, 0);
						printf("2루타가 나옵니다!");
						gotoxy(x + 1, y);
						printf("*");
						break;
					}
					case 4:
					{//97, 12
						while (y >= 12)
						{
							if (y < 30)
							{
								gotoxy(80, 0);
								printf("좌우간을 가르는 타구");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(HIT_SPEED);
							gotoxy(x, y);
							printf(" ");
							if (y % 2 == 0)
							{
								x += 1;
							}
							else
							{
								x += 0;
							}
							y--;
						}
						gotoxy(80, 0);
						printf("                                      ");
						gotoxy(80, 0);
						printf("2루타가 나옵니다!");
						gotoxy(x, y);
						printf("*");
						break;
					}
					case 5:
					{//119, 15
						while (y >= 15)
						{
							if (y < 30)
							{
								gotoxy(80, 0);
								printf("좌우간을 가르는 타구");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(HIT_SPEED);
							gotoxy(x, y);
							printf(" ");
							x += 1;
							y--;
						}
						gotoxy(80, 0);
						printf("                                      ");
						gotoxy(80, 0);
						printf("2루타가 나옵니다!");
						gotoxy(x, y + 1);
						printf("*");
						break;
					}
					case 6:
					{//124, 21
						while (y >= 21)
						{
							if (y < 33)
							{
								gotoxy(80, 0);
								printf("우익수 키 넘어가는 타구");
							}
							gotoxy(x, y);
							printf("*");
							Sleep(HIT_SPEED);
							gotoxy(x, y);
							printf(" ");
							x += 2;
							y--;
						}
						gotoxy(80, 0);
						printf("                                      ");
						gotoxy(80, 0);
						printf("2루타가 나옵니다!");
						gotoxy(x, y);
						printf("*");
						break;
					}
					}
				}
			}
		}
	}
	
}

//번트
void hit_bunt()
{
	srand((unsigned)time(NULL));
	int ran_bunt = 0;
	ran_bunt = (rand() % 100 < 10) ? 0 : 1;

	int x = 84;
	int y = 40;

	system("cls");
	map();
	
	if (ran_bunt == 0)//번트안타 -> 3루 방면
	{
		//좌표: 56, 31
		while ( y >= 31) {
			if (y < 39)
			{
				gotoxy(80, 0);
				printf("3루로 향하는 공");
			}
			gotoxy(x, y);
			printf("*");
			Sleep(BUNT_SPEED);
			gotoxy(x, y);
			printf(" ");
			x -= 3;
			y--;
		}
		gotoxy(80, 0);
		printf("                                      ");
		gotoxy(80, 0);
		printf("행운의 안타가 나옵니다!");
		gotoxy(56, 31);
		printf("*");
	}
	else//파울 또는 아웃
	{
		ran_bunt = (rand() % 100 < 15) ? 0 : 1;
		if (ran_bunt == 0)//파울
		{
			ran_bunt = (rand() % 100 < 50) ? 0 : 1;
			if (ran_bunt == 0)//파울 왼쪽으로 날리기
			{
				
				while (y >= 35) {
					gotoxy(x, y);
					printf("*");
					Sleep(BUNT_SPEED);
					gotoxy(x, y);
					printf(" ");
					x -= 5;
					y--;
				}
				gotoxy(80, 0);
				printf("파울이 나옵니다.");
				gotoxy(54, 35);
				printf("*");
			}
			else//파울 오른쪽으로 날리기
			{
				while (y >= 35)
				{
					gotoxy(x, y);
					printf("*");
					Sleep(BUNT_SPEED);
					gotoxy(x, y);
					printf(" ");
					x += 5;
					y--;
				}
				gotoxy(80, 0);
				printf("파울이 나옵니다.");
				gotoxy(114, 35);
				printf("*");

			}
		}
		else//아웃 -> 1루 방향
		{
			while ( y >= 31) {
				if (y < 39)
				{
					gotoxy(80, 0);
					printf("1루쪽");
				}
				gotoxy(x, y);
				printf("*");
				Sleep(BUNT_SPEED);
				gotoxy(x, y);
				printf(" ");
				x += 3;
				y--;
			}
			gotoxy(80, 0);
			printf("                                      ");
			gotoxy(80, 0);
			printf("아웃!");
			gotoxy(114, 31);
			printf("*");
		}
	}
}

int main()
{
	char play;
	srand((unsigned)time(NULL));
	int ran = 0;
	//타격방법 선택
	int hit = 0;

	int key = 0;
	//커서 숨기기
	hide_cursor(0);

	printf("플레이? ");
	scanf("%c", &play);

	if (play == 'y' || play == 'Y')
	{
		system("cls");
	}

	while (1)
	{
		//변화구 또는 직구 나오게 랜덤
		ran = (rand() % 100 < 50) ? 0 : 1;

		map();

		hit = print_hitting();

		Sleep(1000);

		if (ran == 0) //직구
		{
			print_ball();
		}
		else //변화구
		{
			print_ball2();
		}

		key = _getch();
		if (key == ARROW)
		{
			key = _getch();
		}

		switch (key)
		{
		case SPACEBAR:
		{
			//안타
			if (hit == 1)
			{
				hit_single();
			}
			//번트
			else
			{
				hit_bunt();
			}

			break;
		}
		default:
		{
			break;
		}
		}

		Sleep(1000);
		system("cls");
	}
}
